function w(){const B=new WebSocket(`ws://${location.host}`);B.onopen=()=>setInterval(()=>B.send("ping"),5000),B.onmessage=(L)=>{if(L.data!=="Well received")console.log(L.data);if(L.data==="reload")location.reload()}}var M=getComputedStyle(document.documentElement);class O{B;L;static _ui=new WeakMap;_cellSize;static colorBackground=M.getPropertyValue("--neutral-white");static colorBackgroundHighlight=M.getPropertyValue("--brand-uno-background");static colorSelected=M.getPropertyValue("--brand-uno-hover");static colorText=M.getPropertyValue("--brand-uno");static colorTextLight=M.getPropertyValue("--brand-uno-light");static colorBorder=M.getPropertyValue("--sudoku-border");static colorBorderBold=M.getPropertyValue("--brand-uno");static colorSuccess=M.getPropertyValue("--signal-success");static colorSuccessBackground=M.getPropertyValue("--signal-success-background");static font=M.getPropertyValue("--font-family-primary");constructor(B,L){this._canvas=B;this._ctx=L;this._cellSize=Math.round(Math.min(B.width,B.height)/9)}static get(B){if(console.log(O._ui),console.log(O._ui.has(B)),console.log(O._ui.get(B)),console.log(O._ui.get(B)),O._ui.has(B))return O._ui.get(B);const L=B.getContext("2d");if(L===null)return!1;const q=new O(B,L);return O._ui.set(B,q),q}get width(){return this._canvas.width}get height(){return this._canvas.height}get cellSize(){return this._cellSize}clearCanvas(){return this._ctx.fillStyle=O.colorBackground,this._ctx.fillRect(0,0,this.width,this.height),this}drawCell(B,L,q=this._cellSize,R=O.colorBorder,Q){const T=B*q,X=L*q;if(Q)this._ctx.fillStyle=Q,this._ctx.fillRect(T+1,X+1,q-2,q-2);return this._ctx.strokeStyle=R,this._ctx.strokeRect(T,X,q,q),this}drawRow(B,L){for(let q=0;q<9;q++)this.drawCell(q,B,this._cellSize,O.colorBorder,L);return this}drawColumn(B,L){for(let q=0;q<9;q++)this.drawCell(B,q,this._cellSize,O.colorBorder,L);return this}drawGroup(B,L,q){this.drawCell(B,L,this._cellSize*3,O.colorBorderBold,q);for(let R=0;R<3;R++)for(let Q=0;Q<3;Q++)this.drawCell(B*3+R,L*3+Q,this._cellSize,O.colorBorder);return this}drawCellValue(B,L,q){this._ctx.fillStyle=O.colorText,this._ctx.font=`600 48px ${O.font}`,this._ctx.textBaseline="middle",this._ctx.textAlign="center";const R=B*this._cellSize+Math.floor(this._cellSize*0.5),Q=L*this._cellSize+Math.floor(this._cellSize*0.575);return this._ctx.fillText(q.toString(),R,Q),this}drawCellDomain(B,L,q){this._ctx.fillStyle=O.colorTextLight,this._ctx.font=`400 14px ${O.font}`,this._ctx.textBaseline="top",this._ctx.textAlign="start";const R=Math.max(this._cellSize-2,Math.floor(this._cellSize*0.8)),Q=Math.floor(R/3),T=Math.max(1,Math.floor(this._cellSize*0.1)),X=B*this._cellSize+T,h=L*this._cellSize+T;for(let W=1;W<=9;W++){const Z=q.includes(W)?W:null,$=(W-1)%3,A=Math.floor((W-1)/3),P=X+Q*$,J=h+Q*A;this._ctx.fillText(Z!==null?Z.toString():"",P,J)}return this}drawEmptyGrid(){this.clearCanvas();for(let B=0;B<3;B++)for(let L=0;L<3;L++)this.drawGroup(B,L);return this}colorizeSelectedStuff(B){if(B===null)return this;const L=[Math.floor(B[0]/3),Math.floor(B[1]/3)];return this.drawRow(B[1],O.colorBackgroundHighlight).drawColumn(B[0],O.colorBackgroundHighlight).drawGroup(L[0],L[1],O.colorBackgroundHighlight).drawCell(B[0],B[1],this._cellSize,O.colorBorder,O.colorSelected),this}drawVictory(){return this._ctx.fillStyle=O.colorSuccessBackground,this._ctx.fillRect(0,0,this.width,this.height),this._ctx.fillStyle=O.colorSuccess,this._ctx.font=`600 72px ${O.font}`,this._ctx.textBaseline="middle",this._ctx.textAlign="center",this._ctx.fillText("Victory !".toUpperCase(),this._canvas.width/2,this._canvas.height/2),this}}function g(B){function L(Q){Q.stopPropagation();const{offsetX:T,offsetY:X}=Q,h=Math.min(Math.floor(T/B.ui.cellSize),8),W=Math.min(Math.floor(X/B.ui.cellSize),8),Z=B.getSelectedCell();document.onclick=()=>{if(Z===null||Z[0]!==h||Z[1]!==W)B.setSelectedCell([h,W]),B.refreshGrid()}}function q(Q){if(Q.stopPropagation(),B.getSelectedCell()!==null)B.setSelectedCell(null),B.refreshGrid()}function R(Q){if(Q.stopPropagation(),Q.key>="1"&&Q.key<="9"&&B.getSelectedCell()!==null)B.toggle(parseInt(Q.key))}B.canvas.addEventListener("mousemove",L),B.canvas.addEventListener("mouseout",q),document.onkeyup=R}function z(B){const{canvas:L,ui:q,cellValues:R,cellDomains:Q}=B,T=getComputedStyle(document.documentElement),X=T.getPropertyValue("--sudoku-border"),h=T.getPropertyValue("--signal-error-background");let W=1,Z=1,$=Math.floor(Math.random()*9),A=Math.floor(Math.random()*9);function P(K,N){if(R[K][N]!==null)q.drawCellValue(K,N,R[K][N]);else q.drawCellDomain(K,N,Q[K][N])}function J(){for(let K=0;K<9;K++)for(let N=0;N<9;N++)P(K,N)}setInterval(()=>{if(q.drawCell($,A,q.cellSize,X,"#fff"),P($,A),$+W>8||$+W<0)W=-W;if(A+Z>8||A+Z<0)Z=-Z;$+=W,A+=Z,q.drawCell($,A,q.cellSize,X,h),P($,A)},1000)}var D=function(B){const L=document.getElementById(B),q=[],R=[];if(L===null)return console.error("Cannot get the given Canvas 2D rendering context"),!1;const T=O.get(L);if(!T)return!1;for(let X=0;X<9;X++){q.push([]),R.push([]);for(let h=0;h<9;h++)q[X].push([1,2,3,4,5,6,7,8,9]),R[X].push(null)}return z({canvas:L,ui:T,cellDomains:q,cellValues:R}),{canvas:L,ui:T,cellDomains:q,cellValues:R}},V=function(B){const{canvas:L,ui:q,cellDomains:R,cellValues:Q}=B;let T=null;function X(K,N){if(Q[K][N]!==null)q.drawCellValue(K,N,Q[K][N]);else q.drawCellDomain(K,N,R[K][N])}function h(){for(let K=0;K<9;K++)for(let N=0;N<9;N++)X(K,N)}function W(K,N,Y){const b=R[K][N],F=b.indexOf(Y);if(F!==-1)b.splice(F,1)}function Z(K,N,Y){const b=R[K][N];if(!b.includes(Y))b.push(Y)}function $(K,N,Y,b){const F=b?W:Z,x=Math.floor(K/3),k=Math.floor(N/3);for(let H=0;H<9;H++){if(H!==K)F(H,N,Y);if(H!==N)F(K,H,Y)}for(let H=0;H<3;H++)for(let _=0;_<3;_++){const G=x*3+H,f=k*3+_;if(G!==K&&f!==N)F(G,f,Y)}}function A(K){const N=T[0],Y=T[1];if(Q[N][Y]===null){if(R[N][Y].includes(K))Q[N][Y]=K,$(N,Y,K,!0),J()}else if(Q[N][Y]===K){Q[N][Y]=null,$(N,Y,K,!1);for(let b=0;b<9;b++)for(let F=0;F<9;F++)if(Q[b][F]===K)$(b,F,K,!0);J()}}function P(){for(let K=0;K<9;K++)for(let N=0;N<9;N++)if(Q[K][N]===null)return!1;return!0}function J(){q.drawEmptyGrid().colorizeSelectedStuff(T),h()}if(g({canvas:L,ui:q,refreshGrid:J,toggle:A,getSelectedCell:()=>T,setSelectedCell:(K)=>T=K}),w(),J(),!P())q.drawVictory()};document.addEventListener("DOMContentLoaded",(B)=>{const L=D("sudokuCanvas");if(L)V(L);console.log("Sudoku UI variables:","\n\n","- colorBackground :",O.colorBackground,"\n","- colorBackgroundHighlight :",O.colorBackgroundHighlight,"\n","- colorSelected :",O.colorSelected,"\n","- colorText :",O.colorText,"\n","- colorTextLight :",O.colorTextLight,"\n","- colorBorder :",O.colorBorder,"\n","- colorBorderBold :",O.colorBorderBold,"\n","- font :",O.font)});
