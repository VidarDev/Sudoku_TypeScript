function r(){const o=new WebSocket(`ws://${location.host}`);o.onopen=()=>setInterval(()=>o.send("ping"),5000),o.onmessage=(f)=>{if(f.data!=="Well received")console.log(f.data);if(f.data==="reload")location.reload()}}var L=getComputedStyle(document.documentElement);class g{o;f;static _ui=new WeakMap;_cellSize;static colorBackground=L.getPropertyValue("--neutral-white");static colorBackgroundHighlight=L.getPropertyValue("--brand-uno-background");static colorSelected=L.getPropertyValue("--brand-uno-hover");static colorText=L.getPropertyValue("--brand-uno");static colorTextLight=L.getPropertyValue("--brand-uno-light");static colorBorder=L.getPropertyValue("--brand-uno-light");static colorBorderBold=L.getPropertyValue("--brand-uno");static font=L.getPropertyValue("--font-family-primary");constructor(o,f){this._canvas=o;this._ctx=f;this._cellSize=Math.round(Math.min(o.width,o.height)/9)}static get(o){if(console.log(g._ui),console.log(g._ui.has(o)),console.log(g._ui.has(o)),g._ui.has(o))return g._ui.get(o);const f=o.getContext("2d");if(f===null)return!1;const M=new g(o,f);return g._ui.set(o,M),M}get width(){return this._canvas.width}get height(){return this._canvas.height}get cellSize(){return this._cellSize}clearCanvas(){return this._ctx.fillStyle=g.colorSelected,this._ctx.fillRect(0,0,this.width,this.height),this}drawCell(){}drawRow(){}drawColumn(){}drawGroup(){}drawCellValue(){}drawCellDomain(){}drawEmptyGrid(){this.clearCanvas();for(let o=0;o<3;o++)for(let f=0;f<3;f++)this.drawGroup(o,f);return this}colorizeSelectedStuff(){}drawVictory(){this.clearCanvas()}}var z=function(o){const f=document.getElementById(o),M=g.get(f),h=[],p=[];if(f===null)return console.error("Cannot get the given Canvas 2D rendering context"),!1;if(!M)return!1;for(let d=0;d<9;d++){h.push([]),p.push([]);for(let q=0;q<9;q++)h[d].push([1,2,3,4,5,6,7,8,9]),p[d].push(null)}return{canvas:f,ui:M,cellDomains:h,cellValues:p}},A=function(o){const{canvas:f,ui:M,cellDomains:h,cellValues:p}=o;function d(){M.clearCanvas()}r(),d()};document.addEventListener("DOMContentLoaded",(o)=>{const f=z("sudokuCanvas");if(f)A(f);console.log("Sudoku UI variables:","\n\n","- colorBackground :",g.colorBackground,"\n","- colorBackgroundHighlight :",g.colorBackgroundHighlight,"\n","- colorSelected :",g.colorSelected,"\n","- colorText :",g.colorText,"\n","- colorTextLight :",g.colorTextLight,"\n","- colorBorder :",g.colorBorder,"\n","- colorBorderBold :",g.colorBorderBold,"\n","- font :",g.font)});
